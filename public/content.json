{"meta":{"title":"gavinsocu","subtitle":"","description":"gavin的博客","author":"gavinccc","url":"http://example.com","root":"/"},"pages":[{"title":"","date":"2023-06-24T12:53:59.885Z","updated":"2023-06-24T12:53:59.885Z","comments":true,"path":"custom/darkmode.js","permalink":"http://example.com/custom/darkmode.js","excerpt":"","text":"function BackTOP() { $(\"#btn\").hide(); $(function () { $(window).scroll(function () { if ($(window).scrollTop() > 50) { $(\"#btn\").fadeIn(200); } else { $(\"#btn\").fadeOut(200); } }); $(\"#btn\").click(function () { $('body,html').animate({ scrollTop: 0 }, 500); return false; }); }); $(function () { $(\"#say\").click(function () { $('body,html').animate({ scrollTop: $('html, body').get(0).scrollHeight }, 500); return false; }); }) } $('#readmode').click(function () { $('body').toggleClass('read-mode') }) function SiderMenu() { $('#main-container').toggleClass('open'); $('.iconflat').css('width', '50px').css('height', '50px'); $('.openNav').css('height', '50px'); $('#main-container,#mo-nav,.openNav').toggleClass('open') } function switchNightMode() { $('').appendTo($(\"body\")), setTimeout( function () { (volantis.dark.mode == \"dark\") ? ($(\"html\").addClass(\"DarkMode\"), $('#modeicon').attr(\"xlink:href\", \"#icon-sun\")) : ($(\"html\").removeClass(\"DarkMode\"), $('#modeicon').attr(\"xlink:href\", \"#icon-_moon\")), setTimeout(function () { $(\".Cuteen_DarkSky\").fadeOut(1e3, function () { $(this).remove() }) }, 2e3) }), 50 } function checkNightMode() { if ($(\"html\").hasClass(\"n-f\")) { $(\"html\").removeClass(\"day\"); $(\"html\").addClass(\"DarkMode\"); $('#modeicon').attr(\"xlink:href\", \"#icon-sun\") return; } if ($(\"html\").hasClass(\"d-f\")) { $(\"html\").removeClass(\"DarkMode\"); $(\"html\").addClass(\"day\"); $('#modeicon').attr(\"xlink:href\", \"#icon-_moon\") return; } if (volantis.dark.mode == \"dark\") { $(\"html\").addClass(\"DarkMode\"); $('#modeicon').attr(\"xlink:href\", \"#icon-sun\") } else { $(\"html\").removeClass(\"DarkMode\"); $('#modeicon').attr(\"xlink:href\", \"#icon-_moon\") } } BackTOP(); volantis.dark.push(switchNightMode);"},{"title":"","date":"2023-06-24T12:54:15.311Z","updated":"2023-06-24T12:54:15.311Z","comments":true,"path":"custom/darkmode.css","permalink":"http://example.com/custom/darkmode.css","excerpt":"","text":"#RightDownBtn { position: fixed; left: 1.875rem; bottom: 1.875rem; padding: 0.3125rem 0.625rem; background: #fff; border-radius: 0.1875rem; transition: 0.3s ease all; z-index: 1; align-items: flex-end; flex-direction: column; display: -moz-flex; display: flex; float: right; } #RightDownBtn>a, #RightDownBtn>label { width: 1.5em; height: 1.5em; margin: 0.3125rem 0; transition: .2s cubic-bezier(.25, .46, .45, .94); } /* font color */ .DarkMode #page, .DarkMode #colophon, .DarkMode #vcomments .vbtn, .DarkMode .art-content #archives .al_mon_list .al_mon, .DarkMode .art-content #archives .al_mon_list span, .DarkMode body, .DarkMode .art-content #archives .al_mon_list .al_mon, .DarkMode .art-content #archives .al_mon_list span, .DarkMode button, .DarkMode .art .art-content #archives a, .DarkMode textarea, .DarkMode strong, .DarkMode a, .DarkMode p, .DarkMode li, .DarkMode .label { color: rgba(255, 255, 255, .6); } .DarkMode #page, .DarkMode body, .DarkMode #colophon, .DarkMode #main-container, .DarkMode #page .yya, .DarkMode #content, .DarkMode #contentss, .DarkMode #footer { background-color: #292a2d; } .DarkMode strong, .DarkMode img { filter: brightness(.7); } /* sun and noon */ .Cuteen_DarkSky, .Cuteen_DarkSky:before { content: \"\"; position: fixed; left: 0; right: 0; top: 0; bottom: 0; z-index: 88888888 } .Cuteen_DarkSky { background: linear-gradient(#feb8b0, #fef9db) } .Cuteen_DarkSky:before { transition: 2s ease all; opacity: 0; background: linear-gradient(#4c3f6d, #6c62bb, #93b1ed) } .DarkMode .Cuteen_DarkSky:before { opacity: 1 } .Cuteen_DarkPlanet { z-index: 99999999; position: fixed; left: -50%; top: -50%; width: 200%; height: 200%; -webkit-animation: CuteenPlanetMove 2s cubic-bezier(.7, 0, 0, 1); animation: CuteenPlanetMove 2s cubic-bezier(.7, 0, 0, 1); transform-origin: center bottom } @-webkit-keyframes CuteenPlanetMove { 0% { transform: rotate(0) } to { transform: rotate(360deg) } } @keyframes CuteenPlanetMove { 0% { transform: rotate(0) } to { transform: rotate(360deg) } } .Cuteen_DarkPlanet:after { position: absolute; left: 35%; top: 40%; width: 9.375rem; height: 9.375rem; border-radius: 50%; content: \"\"; background: linear-gradient(#fefefe, #fffbe8) }"},{"title":"","date":"2023-07-02T17:57:32.913Z","updated":"2023-07-02T17:57:32.913Z","comments":true,"path":"custom/binft.js","permalink":"http://example.com/custom/binft.js","excerpt":"","text":"var binft = function (r) { var isTransparent = true; function getRandomColor() { if(isTransparent){ isTransparent = false; //此处修改字体颜色,最后的 0 和 1 不要改 return \"rgba(255,255,255,0)\" }else{ isTransparent = true; return \"rgba(255,255,255,1)\" } } function n(r) { for (var n = document.createDocumentFragment(), i = 0; r > i; i++) { var oneword = document.createElement(\"span\"); oneword.textContent = \"_\"; // 此处是末尾字符,如果想用光标样式可以改为\"|\" oneword.style.color = getRandomColor(); n.appendChild(oneword); } return n } function i() { var t = wordList[c.skillI]; c.step ? c.step-- : (c.step = refreshDelayTime, c.prefixP < l.length ? (c.prefixP >= 0 && (c.text += l[c.prefixP]), c.prefixP++) : \"forward\" === c.direction ? c.skillP < t.length ? (c.text += t[c.skillP], c.skillP++) : c.delay ? c.delay-- : (c.direction = \"backward\", c.delay = showTotalWordDelayTime) : c.skillP > 0 ? (c.text = c.text.slice(0, -1), c.skillP--) : (c.skillI = (c.skillI + 1) % wordList.length, c.direction = \"forward\")), r.textContent = c.text, r.appendChild(n(c.prefixP < l.length ? Math.min(maxLength, maxLength + c.prefixP) : Math.min(maxLength, t.length - c.skillP))), setTimeout(i, d) } var l = \"\", //此处改成你自己的诗词 wordList = [ \"有花堪折直需折,莫待无花空折枝.\", \"闲居少邻并,草径入荒园.鸟宿池边树,僧敲月下门.\", \"侯门一入深如海,从此萧郎是路人.\", \"才见岭头云似盖,已惊岩下雪如尘.\", \"人间万事消磨尽,只有清香似旧时.\", \"日暮酒醒人已远,满天风雨下西楼.\", \"落灯花,棋未收,叹新丰逆旅淹留.\", \"软风吹过窗纱,心期便隔天涯.\", \"迷惑失故路,薄暮无宿栖.\", \"不见白头相携老,只许与君共天明.\", \"晓迎秋露一枝新,不占园中最上春.\", \"荷尽已无擎雨盖,菊残犹有傲霜枝.\", \"春未绿,鬓先丝.人间别久不成悲.\", \"江东子弟多才俊,卷土重来未可知.\", \"莫听穿林打叶声,何妨吟啸且徐行.\", \"在天愿作比翼鸟,在地愿为连理枝.\", ].map(function (r) { return r + \"\" }), showTotalWordDelayTime = 2, refreshDelayTime = 1, maxLength = 1, d = 75, c = { text: \"\", prefixP: -maxLength, skillI: 0, skillP: 0, direction: \"forward\", delay: showTotalWordDelayTime, step: refreshDelayTime }; i() }; binft(document.getElementById('binft'));"},{"title":"Myfriends","date":"2023-06-24T18:44:26.815Z","updated":"2023-06-24T18:44:26.815Z","comments":true,"path":"friends/index.html","permalink":"http://example.com/friends/index.html","excerpt":"感恩","text":"感恩"},{"title":"","date":"2023-06-24T14:28:50.251Z","updated":"2023-06-24T14:28:50.251Z","comments":true,"path":"mylist/index.html","permalink":"http://example.com/mylist/index.html","excerpt":"","text":""},{"title":"所有标签","date":"2023-06-24T14:29:20.653Z","updated":"2023-06-24T14:29:20.653Z","comments":true,"path":"tags/index.html","permalink":"http://example.com/tags/index.html","excerpt":"","text":""},{"title":"所有分类","date":"2023-06-24T14:29:59.613Z","updated":"2023-06-24T14:29:59.613Z","comments":true,"path":"categories/index.html","permalink":"http://example.com/categories/index.html","excerpt":"","text":""},{"title":"","date":"2023-06-24T14:30:30.439Z","updated":"2023-06-24T14:30:30.439Z","comments":true,"path":"about/index.html","permalink":"http://example.com/about/index.html","excerpt":"","text":"下面写关于自己的内容"},{"title":"","date":"2023-07-02T04:53:14.092Z","updated":"2023-07-02T04:53:14.092Z","comments":true,"path":"htmll/renwu.html","permalink":"http://example.com/htmll/renwu.html","excerpt":"","text":"作业 点一下 function jis(){ setTimeout(function(){ document.getElementById(\"bb\").className='jianbian' },10000) } function abc(){ var x=document.getElementById(\"ddd\") var a=\"\" a=Math.floor(Math.random()*900)+100; document.getElementById(\"ccc\").innerHTML=a if(a>600){ x.innerHTML=\"中奖啦！！！\" }else{ x.innerHTML=\"\" } } *{ margin: 0; padding: 0; } #bb{ width: 100%; height: 814px; margin: 0px auto; text-align: center; } button{ font-size: 20px; color: black; width: 100px; height: 30px; margin-top: 10%; background-image: linear-gradient(to left, #f1aee4, #d7baf4, #bfc5fa, #aecef7, #a9d4ee); border-radius: 2px; border: 2px; border-color: black; } .xuanfu:hover{ box-shadow: 0 12px 16px 0 rgba(0,0,0,0.24),0 17px 50px 0 rgba(0,0,0,0.19); } #ccc{ font-size: 300px; } .jianbian{ background-image: linear-gradient(to right top, #e79bc6, #c98ebf, #aa82b6, #8b77aa, #6c6b9c, #586c9c, #436d9a, #2a6d95, #017a9b, #00869d, #00929b, #159d94); }"}],"posts":[{"title":"从51到32","slug":"从51到32","date":"2023-07-08T01:52:35.000Z","updated":"2023-07-08T06:02:54.937Z","comments":true,"path":"2023/07/08/从51到32/","link":"","permalink":"http://example.com/2023/07/08/%E4%BB%8E51%E5%88%B032/","excerpt":"","text":"c语言程序入门应用关键字与数据类型 #include &#x3D;&gt; 包含头文件头文件预处理在源文件与编译器之间#define &#x3D;&gt; 宏定义一般在头部，将c中某关键字进行替换 32个关键字，编译器预先定义了有一定物理意义的字符串 &#x3D;&gt;不同编译器有不&gt;同的定义sizeof 也是关键字:查看变量在内存空间中容量的工具，用法sizeof(变量)通&gt;过关键字定义的不同数据类型的变量，限制变量 (资源)的大小(e.g.4字节，2字节…) c中的数据类型有明确规范，无论输入还是输出都要标明 %d 十进制有符号整数 %u 十进制无符号整数 %f 浮点数 %s 字符串 %c 单个字符 %p 指针的值 %e 指数形式的浮点数 %x, %X 无符号以十六进制表示的整数 %o 无符号以八进制表示的整数 %g 把输出的值按照 %e 或者 %f 类型中输出长度较小的方式输出 %p 输出地址符 %lu 32位无符号整数 %llu 64位无符号整数 %% 输出百分号字符本身。 除了格式化说明符之外，printf() 函数还支持一些标志和选项，用于控制输出的精度、宽度、填充字符和对齐方式等。例如： %-10s：左对齐并占用宽度为 10 的字符串； %5.2f：右对齐并占用宽度为 5，保留两位小数的浮点数； %#x：输出带有 0x 前缀的十六进制数。 局部变量、全局变量、静态变量对于单一文件而言的:局部变量、全局变量、静态变量 局部变量:定义在函数内部的变量&#x3D;&gt;代码块作用域全局变量:定义在函数外部的变量&#x3D;&gt;文件作用域静态变量:有static修饰的变量有很多种组合，不需要都搞清楚，等遇到了再分析: where (可见性)?&amp; static (生命周期)? 数组例：char a[]:{} 当char中使用中文时，应该是二维数组 1char wday[7][7] = &#123;&quot;星期一&quot;,&quot;星期二&quot;,&quot;星期三&quot;,&quot;星期四&quot;,&quot;星期五&quot;,&quot;星期六&quot;,&quot;星期天&quot;&#125;; 注意事项 int a[]&#x3D;{…..}; 可以在定义的时候给出初始值。可省略。 int b[][5]&#x3D;{…}; 同上，但是第二个不能省略。 a[]&#x3D;3; 这样做就不对了，里面没有定位，不能省略。 b[][2]&#x3D;2; 同上，不能省略。 a[x]&#x3D;3；这样做也对，但是要保证变量x的值正确。C不会自动给你查越界。 以下例子很好的展示数组 12345678910111213141516171819202122232425#include &lt;stdio.h&gt;void main()&#123; int tick = 0; //0~86399 short mouth[12] = &#123;31,29,31,30,31,30,31,31,30,31,30,31&#125;; short date; short yue; short week; char wday[][7] = &#123;&quot;星期一&quot;,&quot;星期二&quot;,&quot;星期三&quot;,&quot;星期四&quot;,&quot;星期五&quot;,&quot;星期六&quot;,&quot;星期天&quot;&#125;; printf(&quot;请输入一个在 1~366 区间的数\\n&quot;); scanf_s(&quot;%d&quot;, &amp;tick); week = (tick+8)%7 ; //这个应该不会错的 date = tick; for (int i = 0; i &lt; 12; i++) //依次遍历，一旦小于等于0，则该次遍历为月份 &#123; tick = tick - mouth[i]; if (tick&lt;=0)&#123;yue=i+1;break;&#125;; &#125; for (int j = 0; j &lt; yue; j++) //遍历之后获得减掉前面月份天数的值，即为当月日期 &#123; date= date-mouth[j-1]; &#125; printf(&quot;当前日期为: 20-%02d-%02d-%s\\n&quot;, yue, date, wday[week]); &#125;","categories":[],"tags":[{"name":"从51到32","slug":"从51到32","permalink":"http://example.com/tags/%E4%BB%8E51%E5%88%B032/"}]},{"title":"前端+","slug":"前端","date":"2023-07-07T10:31:49.000Z","updated":"2023-07-07T16:46:38.050Z","comments":true,"path":"2023/07/07/前端/","link":"","permalink":"http://example.com/2023/07/07/%E5%89%8D%E7%AB%AF/","excerpt":"","text":"事件循环浏览器的进程模型何为进程？程序运行需要有它自己专属的内存空间，可以把这块内存空间简单的理解为进程 每个应用至少有一个进程，进程之间相互独立，即使要通信，也需要双方同意。 何为线程？有了进程后，就可以运行程序的代码了。 运行代码的「人」称之为「线程」。 一个进程至少有一个线程，所以在进程开启后会自动创建一个线程来运行代码，该线程称之为主线程。当主线程结束时，进程也相应结束 如果程序需要同时执行多块代码，主线程就会启动更多的线程来执行代码，所以一个进程中可以包含多个线程。 浏览器有哪些进程和线程？浏览器是一个多进程多线程的应用程序 浏览器内部工作极其复杂。 为了避免相互影响，为了减少连环崩溃的几率，当启动浏览器后，它会自动启动多个进程。 可以在浏览器的任务管理器中查看当前的所有进程 其中，最主要的进程有： 浏览器进程 主要负责界面显示、用户交互、子进程管理等。浏览器进程内部会启动多个线程处理不同的任务。 网络进程 负责加载网络资源。网络进程内部会启动多个线程来处理不同的网络任务。 渲染进程（本节课重点讲解的进程） 渲染进程启动后，会开启一个渲染主线程，主线程负责执行 HTML、CSS、JS 代码。 默认情况下，浏览器会为每个标签页开启一个新的渲染进程，以保证不同的标签页之间不相互影响。 将来该默认模式可能会有所改变，有兴趣的同学可参见chrome官方说明文档 渲染主线程是如何工作的？渲染主线程是浏览器中最繁忙的线程，需要它处理的任务包括但不限于： 解析 HTML 解析 CSS 计算样式 布局 处理图层 每秒把页面画 60 次 执行全局 JS 代码 执行事件处理函数 执行计时器的回调函数 …… 思考题：为什么渲染进程不适用多个线程来处理这些事情？ 要处理这么多的任务，主线程遇到了一个前所未有的难题：如何调度任务？ 比如： 我正在执行一个 JS 函数，执行到一半的时候用户点击了按钮，我该立即去执行点击事件的处理函数吗？ 我正在执行一个 JS 函数，执行到一半的时候某个计时器到达了时间，我该立即去执行它的回调吗？ 浏览器进程通知我“用户点击了按钮”，与此同时，某个计时器也到达了时间，我应该处理哪一个呢？ …… 渲染主线程想出了一个绝妙的主意来处理这个问题：排队 在最开始的时候，渲染主线程会进入一个无限循环 每一次循环会检查消息队列中是否有任务存在。如果有，就取出第一个任务执行，执行完一个后进入下一次循环；如果没有，则进入休眠状态。 其他所有线程（包括其他进程的线程）可以随时向消息队列添加任务。新任务会加到消息队列的末尾。在添加新任务时，如果主线程是休眠状态，则会将其唤醒以继续循环拿取任务 这样一来，就可以让每个任务有条不紊的、持续的进行下去了。 整个过程，被称之为事件循环（消息循环） 若干解释何为异步？代码在执行过程中，会遇到一些无法立即处理的任务，比如： 计时完成后需要执行的任务 —— setTimeout、setInterval 网络通信完成后需要执行的任务 – XHR、Fetch 用户操作后需要执行的任务 – addEventListener 如果让渲染主线程等待这些任务的时机达到，就会导致主线程长期处于「阻塞」的状态，从而导致浏览器「卡死」 渲染主线程承担着极其重要的工作，无论如何都不能阻塞！ 因此，浏览器选择异步来解决这个问题 使用异步的方式，渲染主线程永不阻塞 面试题：如何理解 JS 的异步？ 参考答案： JS是一门单线程的语言，这是因为它运行在浏览器的渲染主线程中，而渲染主线程只有一个。 而渲染主线程承担着诸多的工作，渲染页面、执行 JS 都在其中运行。 如果使用同步的方式，就极有可能导致主线程产生阻塞，从而导致消息队列中的很多其他任务无法得到执行。这样一来，一方面会导致繁忙的主线程白白的消耗时间，另一方面导致页面无法及时更新，给用户造成卡死现象。 所以浏览器采用异步的方式来避免。具体做法是当某些任务发生时，比如计时器、网络、事件监听，主线程将任务交给其他线程去处理，自身立即结束任务的执行，转而执行后续代码。当其他线程完成时，将事先传递的回调函数包装成任务，加入到消息队列的末尾排队，等待主线程调度执行。 在这种异步模式下，浏览器永不阻塞，从而最大限度的保证了单线程的流畅运行。 JS为何会阻碍渲染？先看代码 1234567891011121314151617&lt;h1&gt;Mr.Yuan is awesome!&lt;/h1&gt;&lt;button&gt;change&lt;/button&gt;&lt;script&gt; var h1 = document.querySelector(&#x27;h1&#x27;); var btn = document.querySelector(&#x27;button&#x27;); // 死循环指定的时间 function delay(duration) &#123; var start = Date.now(); while (Date.now() - start &lt; duration) &#123;&#125; &#125; btn.onclick = function () &#123; h1.textContent = &#x27;陈广文很帅！&#x27;; delay(3000); &#125;;&lt;/script&gt; 点击按钮后，会发生什么呢？ &lt;见具体演示&gt; 任务有优先级吗？任务没有优先级，在消息队列中先进先出 但消息队列是有优先级的 根据 W3C 的最新解释: 每个任务都有一个任务类型，同一个类型的任务必须在一个队列，不同类型的任务可以分属于不同的队列。在一次事件循环中，浏览器可以根据实际情况从不同的队列中取出任务执行。 浏览器必须准备好一个微队列，微队列中的任务优先所有其他任务执行https://html.spec.whatwg.org/multipage/webappapis.html#perform-a-microtask-checkpoint 随着浏览器的复杂度急剧提升，W3C 不再使用宏队列的说法 在目前 chrome 的实现中，至少包含了下面的队列： 延时队列：用于存放计时器到达后的回调任务，优先级「中」 交互队列：用于存放用户操作后产生的事件处理任务，优先级「高」 微队列：用户存放需要最快执行的任务，优先级「最高」 添加任务到微队列的主要方式主要是使用 Promise、MutationObserver 例如： 12// 立即把一个函数添加到微队列Promise.resolve().then(函数) 浏览器还有很多其他的队列，由于和我们开发关系不大，不作考虑 面试题：阐述一下 JS 的事件循环 参考答案： 事件循环又叫做消息循环，是浏览器渲染主线程的工作方式。 在 Chrome 的源码中，它开启一个不会结束的 for 循环，每次循环从消息队列中取出第一个任务执行，而其他线程只需要在合适的时候将任务加入到队列末尾即可。 过去把消息队列简单分为宏队列和微队列，这种说法目前已无法满足复杂的浏览器环境，取而代之的是一种更加灵活多变的处理方式。 根据 W3C 官方的解释，每个任务有不同的类型，同类型的任务必须在同一个队列，不同的任务可以属于不同的队列。不同任务队列有不同的优先级，在一次事件循环中，由浏览器自行决定取哪一个队列的任务。但浏览器必须有一个微队列，微队列的任务一定具有最高的优先级，必须优先调度执行。 面试题：JS 中的计时器能做到精确计时吗？为什么？ 参考答案： 不行，因为： 计算机硬件没有原子钟，无法做到精确计时 操作系统的计时函数本身就有少量偏差，由于 JS 的计时器最终调用的是操作系统的函数，也就携带了这些偏差 按照 W3C 的标准，浏览器实现计时器时，如果嵌套层级超过 5 层，则会带有 4 毫秒的最少时间，这样在计时时间少于 4 毫秒时又带来了偏差 受事件循环的影响，计时器的回调函数只能在主线程空闲时运行，因此又带来了偏差","categories":[],"tags":[{"name":"前端","slug":"前端","permalink":"http://example.com/tags/%E5%89%8D%E7%AB%AF/"}]},{"title":"long","slug":"long","date":"2023-06-27T17:05:45.000Z","updated":"2023-07-02T17:48:26.388Z","comments":true,"path":"2023/06/28/long/","link":"","permalink":"http://example.com/2023/06/28/long/","excerpt":"","text":"用于实验iframe元素","categories":[],"tags":[{"name":"iframe","slug":"iframe","permalink":"http://example.com/tags/iframe/"}]},{"title":"Hello World","slug":"hello-world","date":"2023-06-20T19:33:40.569Z","updated":"2023-06-20T19:33:40.569Z","comments":true,"path":"2023/06/21/hello-world/","link":"","permalink":"http://example.com/2023/06/21/hello-world/","excerpt":"","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new &quot;My New Post&quot; More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","categories":[],"tags":[]}],"categories":[],"tags":[{"name":"从51到32","slug":"从51到32","permalink":"http://example.com/tags/%E4%BB%8E51%E5%88%B032/"},{"name":"前端","slug":"前端","permalink":"http://example.com/tags/%E5%89%8D%E7%AB%AF/"},{"name":"iframe","slug":"iframe","permalink":"http://example.com/tags/iframe/"}]}